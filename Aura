-- Advanced Fly+TP+ESP+TriggerBot+Bypass+Jitter Cheat (FINAL)
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local TextChatService = game:GetService("TextChatService")

-- CONFIG --
local FLY_SPEED = 50
local FLY_KEY = Enum.KeyCode.F
local TP_KEY = Enum.KeyCode.T
local ESP_KEY = Enum.KeyCode.G
local TRIGGERBOT_KEY = Enum.KeyCode.Z
local JITTER_KEY = Enum.KeyCode.J
local GUI_KEY = Enum.KeyCode.RightShift
local ESP_COLOR = Color3.fromRGB(0, 255, 0)
local TRIGGERBOT_DISTANCE = 1000
local JITTER_SPEED = 70 -- Скорость вращения (60-90)
-- END CONFIG --

-- Core Variables
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

local isFlying = false
local espEnabled = false
local triggerBotEnabled = false
local isJittering = false
local flyConnection = nil
local jitterConnection = nil
local playerListGUI = nil

-----------------
-- CHAT BYPASS --
-----------------
do
    local function bypassFilter(text)
        local replacements = {
            ["a"] = "а", ["e"] = "е", ["o"] = "о",
            ["c"] = "с", ["x"] = "х", ["p"] = "р",
            ["y"] = "у", ["k"] = "к"
        }
        
        local zeroWidthSpace = "​"
        local result = ""
        
        for i = 1, #text do
            local char = text:sub(i, i)
            local lowerChar = char:lower()
            
            if replacements[lowerChar] then
                result = result .. (char == lowerChar and replacements[lowerChar] or replacements[lowerChar]:upper())
            else
                result = result .. char
            end
            
            if i < #text then
                result = result .. zeroWidthSpace
            end
        end
        
        return result
    end

    -- New chat system
    if TextChatService then
        local originalSend
        originalSend = hookfunction(TextChatService.TextChannels.RBXGeneral.SendAsync, function(self, text, ...)
            return originalSend(self, bypassFilter(text), ...)
        end)
    end
    
    -- Legacy chat system
    local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
    if chatEvents then
        local sayMsg = chatEvents:FindFirstChild("SayMessageRequest")
        if sayMsg then
            local originalFire
            originalFire = hookfunction(sayMsg.FireServer, function(_, msg, ...)
                return originalFire(_, bypassFilter(msg), ...)
            end)
        end
    end
end

-----------------
-- FLIGHT SYSTEM --
-----------------
local function toggleFlight(state)
    if state == isFlying then return end
    isFlying = state
    
    if isFlying then
        local bg = Instance.new("BodyGyro")
        bg.Name = "FlightGyro"
        bg.P = 10000
        bg.D = 100
        bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.CFrame = RootPart.CFrame
        bg.Parent = RootPart
        
        local bv = Instance.new("BodyVelocity")
        bv.Name = "FlightVelocity"
        bv.Velocity = Vector3.new()
        bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        bv.P = 10000
        bv.Parent = RootPart
        
        local gravity = Instance.new("BodyForce")
        gravity.Name = "AntiGravity"
        gravity.Force = Vector3.new(0, workspace.Gravity * RootPart:GetMass(), 0)
        gravity.Parent = RootPart
        
        flyConnection = RunService.Heartbeat:Connect(function()
            if not isFlying or not Character or not RootPart then return end
            
            local direction = Vector3.new()
            local camCF = Camera.CFrame
            
            if UIS:IsKeyDown(Enum.KeyCode.W) then direction = direction + camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.S) then direction = direction - camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.A) then direction = direction - camCF.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.D) then direction = direction + camCF.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then direction = direction + Vector3.new(0, 1, 0) end
            if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then direction = direction - Vector3.new(0, 1, 0) end
            
            if direction.Magnitude > 0 then
                bv.Velocity = direction.Unit * FLY_SPEED
            else
                bv.Velocity = Vector3.new()
            end
            bg.CFrame = camCF
        end)
    else
        if flyConnection then flyConnection:Disconnect() end
        
        if RootPart then
            for _, v in ipairs({"FlightGyro", "FlightVelocity", "AntiGravity"}) do
                local part = RootPart:FindFirstChild(v)
                if part then part:Destroy() end
            end
        end
    end
end

-----------------
-- JITTER SYSTEM --
-----------------
local function toggleJitter(state)
    if state == isJittering then return end
    isJittering = state
    
    if isJittering then
        Humanoid.AutoRotate = false
        
        for _, part in ipairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        
        jitterConnection = RunService.Heartbeat:Connect(function(delta)
            if not Character or not RootPart then return end
            RootPart.CFrame = RootPart.CFrame * CFrame.Angles(0, math.rad(90 * JITTER_SPEED * delta), 0)
        end)
    else
        if jitterConnection then jitterConnection:Disconnect() end
        Humanoid.AutoRotate = true
        
        if Character then
            for _, part in ipairs(Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

-----------------
-- TRIGGERBOT SYSTEM --
-----------------
local function updateTriggerBot()
    if not triggerBotEnabled or not Character or not RootPart then return end
    
    local closestPlayer, closestDistance = nil, math.huge
    local myPosition = RootPart.Position
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player and player.Character then
            local humanoidRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRoot then
                local distance = (myPosition - humanoidRoot.Position).Magnitude
                if distance < closestDistance and distance <= TRIGGERBOT_DISTANCE then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    if closestPlayer and closestPlayer.Character then
        local target = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
        if target then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
        end
    end
end

-----------------
-- TELEPORT SYSTEM --
-----------------
local function teleportToPlayer(target)
    if not target or not target.Character then return end
    
    local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
    local targetHead = target.Character:FindFirstChild("Head")
    if not targetRoot then return end
    
    local headOffset = targetHead and (targetHead.Position.Y - targetRoot.Position.Y) or 3
    local targetPosition = targetRoot.Position + Vector3.new(0, headOffset + 2, 0)
    
    local wasFlying = isFlying
    if isFlying then toggleFlight(false) end
    
    RootPart.CFrame = CFrame.new(targetPosition)
    
    if wasFlying then
        task.wait(0.1)
        toggleFlight(true)
    end
end

-----------------
-- PLAYER LIST GUI --
-----------------
local function createPlayerListGUI()
    if playerListGUI then playerListGUI:Destroy() end
    
    playerListGUI = Instance.new("ScreenGui", CoreGui)
    playerListGUI.Name = "PlayerListGUI"
    
    local mainFrame = Instance.new("Frame", playerListGUI)
    mainFrame.Size = UDim2.new(0.25, 0, 0.5, 0)
    mainFrame.Position = UDim2.new(0.375, 0, 0.25, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BackgroundTransparency = 0.15
    mainFrame.BorderSizePixel = 0
    
    local title = Instance.new("TextLabel", mainFrame)
    title.Text = "PLAYER LIST (T to close)"
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.GothamBold
    
    local scrollFrame = Instance.new("ScrollingFrame", mainFrame)
    scrollFrame.Size = UDim2.new(1, -10, 0.85, -10)
    scrollFrame.Position = UDim2.new(0, 5, 0.1, 5)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    
    local layout = Instance.new("UIListLayout", scrollFrame)
    layout.Padding = UDim.new(0, 5)
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player then
            local button = Instance.new("TextButton", scrollFrame)
            button.Text = player.Name
            button.Size = UDim2.new(1, -10, 0, 40)
            button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            button.TextColor3 = Color3.new(1, 1, 1)
            button.Font = Enum.Font.Gotham
            
            button.MouseButton1Click:Connect(function()
                teleportToPlayer(player)
            end)
        end
    end
    
    Players.PlayerAdded:Connect(function(player)
        if player ~= Player then
            local button = Instance.new("TextButton", scrollFrame)
            button.Text = player.Name
            button.Size = UDim2.new(1, -10, 0, 40)
            button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            button.TextColor3 = Color3.new(1, 1, 1)
            button.Font = Enum.Font.Gotham
            
            button.MouseButton1Click:Connect(function()
                teleportToPlayer(player)
            end)
        end
    end)
    
    Players.PlayerRemoving:Connect(function(player)
        for _, child in ipairs(scrollFrame:GetChildren()) do
            if child:IsA("TextButton") and child.Text == player.Name then
                child:Destroy()
            end
        end
    end)
    
    return playerListGUI
end

-----------------
-- ESP SYSTEM --
-----------------
local highlights = {}
local function toggleESP(state)
    espEnabled = state
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player and player.Character then
            local highlight = player.Character:FindFirstChildOfClass("Highlight")
            
            if espEnabled then
                if not highlight then
                    highlight = Instance.new("Highlight")
                    highlight.FillColor = ESP_COLOR
                    highlight.OutlineColor = ESP_COLOR
                    highlight.Parent = player.Character
                    highlights[player] = highlight
                end
            elseif highlight then
                highlight:Destroy()
                highlights[player] = nil
            end
        end
    end
end

-----------------
-- CONTROL MENU --
-----------------
local function createControlMenu()
    local gui = Instance.new("ScreenGui", CoreGui)
    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0.2, 0, 0.35, 0)
    frame.Position = UDim2.new(0.8, 0, 0.1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    
    local function addButton(text, yPos, callback)
        local btn = Instance.new("TextButton", frame)
        btn.Text = text
        btn.Size = UDim2.new(0.9, 0, 0.15, 0)
        btn.Position = UDim2.new(0.05, 0, yPos, 0)
        btn.MouseButton1Click:Connect(function()
            callback()
            gui:Destroy()
        end)
    end
    
    addButton("Fly (F): " .. (isFlying and "ON" or "OFF"), 0.05, function()
        toggleFlight(not isFlying)
    end)
    
    addButton("ESP (G): " .. (espEnabled and "ON" or "OFF"), 0.21, function()
        toggleESP(not espEnabled)
    end)
    
    addButton("TriggerBot (Z): " .. (triggerBotEnabled and "ON" or "OFF"), 0.37, function()
        triggerBotEnabled = not triggerBotEnabled
    end)
    
    addButton("Jitter (J): " .. (isJittering and "ON" or "OFF"), 0.53, function()
        toggleJitter(not isJittering)
    end)
    
    addButton("Teleport (T)", 0.69, function()
        createPlayerListGUI().Enabled = true
    end)
    
    addButton("Close", 0.85, function() end)
end

-----------------
-- KEYBINDS --
-----------------
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == FLY_KEY then
        toggleFlight(not isFlying)
    elseif input.KeyCode == TP_KEY then
        if playerListGUI and playerListGUI.Enabled then
            playerListGUI.Enabled = false
        else
            createPlayerListGUI().Enabled = true
        end
    elseif input.KeyCode == ESP_KEY then
        toggleESP(not espEnabled)
    elseif input.KeyCode == TRIGGERBOT_KEY then
        triggerBotEnabled = not triggerBotEnabled
    elseif input.KeyCode == JITTER_KEY then
        toggleJitter(not isJittering)
    elseif input.KeyCode == GUI_KEY then
        createControlMenu()
    end
end)

-----------------
-- INITIALIZE --
-----------------
Player.CharacterAdded:Connect(function(char)
    Character = char
    Humanoid = char:WaitForChild("Humanoid")
    RootPart = char:WaitForChild("HumanoidRootPart")
    
    if isFlying then
        toggleFlight(false)
        task.wait(0.1)
        toggleFlight(true)
    end
    if espEnabled then
        toggleESP(false)
        task.wait()
        toggleESP(true)
    end
    if isJittering then
        toggleJitter(false)
        task.wait(0.1)
        toggleJitter(true)
    end
end)

-- Main loops
RunService.RenderStepped:Connect(updateTriggerBot)

RunService.Stepped:Connect(function()
    if isFlying and Character then
        for _, part in ipairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Notification
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Ultimate Cheat Activated",
    Text = "F: Fly | T: TP Menu | G: ESP | Z: Trigger | J: Jitter | RightShift: Menu",
    Duration = 5
})
